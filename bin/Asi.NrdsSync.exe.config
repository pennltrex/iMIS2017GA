<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="iMIS">
      <section name="SystemParams" type="Asi.SystemConfig, Asi" />
      <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
      <section name="Soa" type="Asi.Soa.Core.Configuration.SoaConfiguration, Asi.Contracts" />
    </sectionGroup>
  </configSections>
  <system.codedom>
    <compilers>
    </compilers>
  </system.codedom>
  <system.web>
    <roleManager enabled="true" defaultProvider="ClientRoleProvider">
      <providers>
        <clear />
        <add name="ImisRoleProvider" type="Asi.Providers.AsiRoleProviderV10, Asi.V10" applicationName="iMIS" />
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="AsiMembershipProvider" type="Asi.Providers.AsiMembershipProviderV10, Asi.V10" provider="CustomizedProvider" />
        <add name="CustomizedProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="DataSource.iMIS.Connection" applicationName="iMIS" requiresQuestionAndAnswer="false" minRequiredPasswordLength="7" minRequiredNonalphanumericCharacters="0" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" passwordStrengthRegularExpression="(?=.{7,})(?=(.*\d){1,})(?=(.*[a-zA-Z]){1,})" />
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <profile defaultProvider="AsiProfileProvider">
      <providers>
        <add name="AsiProfileProvider" type="Asi.Providers.AsiProfileProvider, Asi.Providers" connectionStringName="DataSource.iMIS.Connection" applicationName="iMIS" />
        <add name="CustomizedProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="DataSource.iMIS.Connection" applicationName="iMIS" />
      </providers>
    </profile>
  </system.web>
  <iMIS>
    <SystemParams>
      <add key="UserId" value="MANAGER" />
      <add key="Authenticate.Anonymous.Allow" value="true" />
      <add key="Authenticate.Anonymous.UserId" value="GUEST" />
      <add key="Authenticate.PersistLogin.Allow" value="true" />
      <add key="Authenticate.PersistLogin.Minutes" value="0" />
      <add key="Authenticate.SecureLoginPage" value="false" />
      <add key="Authenticate.WindowsIdentity.Allow" value="true" />
      <add key="Browser.DisableContextMenu" value="false" />
      <add key="CustomErrors.ErrorPage.DisplayMode.Debug" value="false" />
      <add key="SqlCommand.CommandTimeout" value="900" />
      <add key="AtomCompiler.DebugCompile" value="false" />
      <add key="PagedResults.MaxRecords" value="500" />
      <add key="Authentication.AllowAddUserToAuthStore" value="true" />
      <add key="Authentication.AllowUsernameChange" value="true" />
      <add key="Authentication.PasswordResetTokenExpireDays" value="7" />
      <add key="BOD.AssemblyCachePeriod" value="60" />
      <add key="Sitemap.CachePeriod" value="5" />
      <add key="AsiMSTestBase.Username" value="NUNIT1" />
      <add key="AsiMSTestBase.Password" value="NUNIT1" />
      <!-- Specify the NrdsBatchSize to retrieve the first N rows from the queue each iteration -->
      <!-- and continue running the sync until the queue is empty -->
      <add key="NrdsBatchSize" value="50" />
      <!-- Setting the NrdsBatchSize value to "0" will load all records into a single batch -->
      <add key="BatchRefreshFileLocation" value="" />
      <!-- If file location is empty, each member/office will be requested from NRDS one-by-one -->
      <add key="Service.WorkingDirectory" value="C:\Program Files (x86)\ASI\iMIS0\Net\bin" />
    </SystemParams>
    <Soa>
      <settings>
        <setting key="PartyRelatedEntities" value="" />
        <setting key="EntityManagerDefaultBaseUri" value="https://localhost/Asi.Scheduler_iMIS" />
        <setting key="EntityManagerDefaultEndpointType" value="WebApi" />
      </settings>
    </Soa>
  </iMIS>
  <appSettings>
    <add key="System.WebLogin" value="GUEST" />
    <add key="Request.Url.Authority.ToString" value="localhost" />
    <add key="UsingIMISSecurityTable" value="true" />
    <add key="ImisWebServerUrl" value="https://WIN2012R2/iMIS" />
    <add key="iBOCacheRefreshIntervalSeconds" value="300" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <add key="IndexPath" value="C:\Program Files (x86)\ASI\iMIS0\IndexServiceProtected\Search\Lucene" />
  </appSettings>
  <system.serviceModel>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtTransportLevel="true" />
    </diagnostics>
    <extensions>
      <behaviorExtensions>
        <add name="validation" type="Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationElement, Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </behaviorExtensions>
    </extensions>
    <bindings>
      <basicHttpBinding>
        <binding name="basicHttpTransportWithMessageCredential" maxReceivedMessageSize="10000000">
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="None" />
            <message clientCredentialType="UserName" />
          </security>
        </binding>
        <binding name="basicHttpTransport" maxReceivedMessageSize="10000000">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
        <binding name="AddressServiceTransportSecurity" maxReceivedMessageSize="10000000">
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
      <webHttpBinding>
        <binding name="web" maxReceivedMessageSize="10000000" allowCookies="true">
          <security mode="Transport" />
        </binding>
      </webHttpBinding>
      <wsHttpBinding>
        <binding name="wsHttp">
          <security mode="Message">
            <transport clientCredentialType="None" />
            <message clientCredentialType="UserName" />
          </security>
        </binding>
      </wsHttpBinding>
      <customBinding>
        <binding name="netTcp">
          <binaryMessageEncoding>
            <readerQuotas maxArrayLength="2147483647" maxStringContentLength="2147483647" maxDepth="64" />
          </binaryMessageEncoding>
          <security authenticationMode="UserNameOverTransport" />
          <windowsStreamSecurity />
          <tcpTransport portSharingEnabled="true" maxBufferPoolSize="52428800" maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" />
        </binding>
      </customBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ASPNETProviders">
          <serviceDebug includeExceptionDetailInFaults="false" />
          <serviceMetadata httpGetEnabled="true" httpGetUrl="" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="MembershipProvider" />
          </serviceCredentials>
          <serviceAuthorization principalPermissionMode="Custom">
            <authorizationPolicies>
              <add policyType="Asi.Soa.ServiceModelEx.ClaimsAuthorizationPolicy, Asi.Soa.ServiceModelEx" />
            </authorizationPolicies>
          </serviceAuthorization>
        </behavior>
        <behavior name="netTcp">
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceMetadata />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="Asi.Soa.ServiceModelEx.NullUserNamePasswordValidator, Asi.Soa.ServiceModelEx" />
            <clientCertificate>
              <authentication certificateValidationMode="None" />
            </clientCertificate>
          </serviceCredentials>
          <serviceAuthorization principalPermissionMode="Custom">
            <authorizationPolicies>
              <add policyType="Asi.Soa.ServiceModelEx.ClaimsAuthorizationPolicy, Asi.Soa.ServiceModelEx" />
            </authorizationPolicies>
          </serviceAuthorization>
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="SoapBehavior">
          <!--<validation enabled="true" ruleset=""/>-->
        </behavior>
        <behavior name="RestBehavior">
          <!--<faultingWebHttp />-->
        </behavior>
        <behavior name="AjaxBehavior">
          <enableWebScript />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <services>
      <service name="Asi.Soa.Core.Services.EntityService" behaviorConfiguration="ASPNETProviders">
        <endpoint address="Soap11" name="Soap11" behaviorConfiguration="SoapBehavior" binding="basicHttpBinding" bindingConfiguration="basicHttpTransportWithMessageCredential" contract="Asi.Soa.Core.ServiceContracts.IEntityService" />
        <!--<endpoint address="Soap11to" name="Soap11to" behaviorConfiguration="SoapBehavior" binding="basicHttpBinding" bindingConfiguration="basicHttpTransport" contract="Asi.Soa.Core.ServiceContracts.IEntityService" />-->
        <!--<endpoint address="Soap12" name="Soap12" behaviorConfiguration="SoapBehavior" binding="wsHttpBinding" bindingConfiguration="wsHttp" contract="Asi.Soa.Core.ServiceContracts.IEntityService" />-->
        <!-- Uncomment to enable netTcp hosting. This only works in IIS7+; see http://labs.episerver.com/en/Blogs/Paul-Smith/Dates/2008/6/Hosting-non-HTTP-based-WCF-applications-in-IIS7/ for prereqs -->
        <!-- Note that *anyone* who can write a .NET application and can connect to this website will be able to authenticate with username only (no password), so be very careful here -->
        <!--<endpoint address="netTcp" name="netTcp" binding="customBinding" bindingConfiguration="netTcp" contract="Asi.Soa.Core.ServiceContracts.IEntityService" />-->
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <!-- activate NetTcp on IIS 7 + instead of a separate server -->
      <service name="Asi.Soa.Core.Services.EntityServiceNetTcpAdaptor" behaviorConfiguration="netTcp">
        <endpoint address="netTcp" name="netTcp" binding="customBinding" bindingConfiguration="netTcp" contract="Asi.Soa.Core.ServiceContracts.IEntityService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="Asi.Soa.Core.Services.EntityServiceRestAdaptor" behaviorConfiguration="ASPNETProviders">
        <endpoint address="" name="rest" binding="webHttpBinding" bindingConfiguration="web" behaviorConfiguration="RestBehavior" contract="Asi.Soa.Core.ServiceContracts.IEntityService" />
        <!--<endpoint address="SoapTransportSecurity" name="SoapTransportSecurity" behaviorConfiguration="SoapBehavior" binding="basicHttpBinding" bindingConfiguration="basicHttpTransport" contract="Asi.Soa.PartiesContracts.IPartyService" />-->
        <!--<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />-->
      </service>
    </services>
  </system.serviceModel>
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="traceListener" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\log\ServerTraces.svclog" />
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.2" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-8.0.0.0" newVersion="8.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
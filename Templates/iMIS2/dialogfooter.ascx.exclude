<%@ Control Language="c#" AutoEventWireup="false" %>
<%@ Register TagPrefix="asi" Assembly="Asi.Web" Namespace="Asi.Web.UI.WebControls" %>
<script language="C#" runat="server">
	override protected void OnInit(EventArgs e)
	{
		base.OnInit(e);
		this.ButtonBar.CommandButtonClick += new Asi.Web.UI.CommandButtonEventHandler(this.ButtonBar_CommandButtonClick);
	}
	
	private Asi.Web.UI.Common.ContentManagement.Template Template
	{
		get
		{
			return (Asi.Web.UI.Common.ContentManagement.Template) Parent.Parent;
		}
	}

    override protected void OnLoad(EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            ViewState["PostOpeningWindow"] = Request["iPostOpeningWindow"] != null && bool.Parse(Request["iPostOpeningWindow"]);
            ViewState["CallbackFunction"] = Request["iCallbackFunction"];
        }
    }
	override protected void OnPreRender(EventArgs e)
	{
		base.OnPreRender(e);

		Asi.Web.UI.CommandButtonRequisiteArgs buttonArgs = new Asi.Web.UI.CommandButtonRequisiteArgs();
		Template.CommandButtonRequisites(buttonArgs);

		System.Array commandButtons = Enum.GetValues(typeof(Asi.Web.UI.CommandButtonType));
		Asi.Web.UI.CommandButtonType flags = 0;
		foreach (Asi.Web.UI.CommandButtonType commandButton in commandButtons)
		{
			if (buttonArgs.ShowButton(commandButton))
				flags = flags | commandButton;
		}
		
		ButtonBar.VisibleButtons = flags;
	}
	private void ButtonBar_CommandButtonClick(object sender, Asi.Web.UI.CommandButtonEventArgs e)
	{
		Template.HandleCommandButtonClick(sender, e.ButtonType);

        // Handle OK clicked client-side functionality
        if (e.ButtonType == Asi.Web.UI.CommandButtonType.Ok)
        {
            if (Template.GetUserMessages().Length == 0)
            {
                string script = string.Empty;
                if (ViewState["PostOpeningWindow"] != null && (bool)ViewState["PostOpeningWindow"])
                {
                    script += "if(window.opener) window.opener.submitForm();";
                }

                string callback = SafeString(ViewState["CallbackFunction"]);
                if (callback != String.Empty)
                {
                    script += "if (window.opener) window.opener." + MakeFunctionCall(callback) + ";";
                }

                script += "window.returnValue=true;window.close();";

                okButtonScript.Text = script;
            }
        }
    }
    private string MakeFunctionCall(string str)
    {
        return (str.IndexOf("(") < 0) ? str + "()" : str;
    }
    private string SafeString(object obj)
    {
        string str = obj as string;
        return (str == null) ? String.Empty : str;
    }
</script>

                </div>
            </td>
        </tr>
        <tr>
            <td style="text-align:right;">
                <!--Dialog Footer...if you see this then please tell someone to remove it.-->
                <div id="dialogbottombuttonbar">
                    <asi:CommandButtonBar id="ButtonBar" runat="server" />
                    <asiweb:StyledButton ID="DialogCancelButton" runat="server" Text='Close Dialog' CommandButtonType="Cancel" OnClientClick="if (window.opener && window.opener.RefreshBySubmit()) { window.opener.RefreshBySubmit(); } window.close();" AutoPostBack="false" />
                </div>
            </td>
        </tr>
    </table>
</div>

<script language="javascript" type="text/javascript">
	<asp:Literal id="okButtonScript" runat="server"></asp:Literal>
</script>
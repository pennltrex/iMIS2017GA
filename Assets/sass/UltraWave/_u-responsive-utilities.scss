/* ==========================================================================
   RESPONSIVE UTILITIES
   ========================================================================== */
/* From Bootstrap 3.0.2 */

// IE10 in Windows (Phone) 8
//
// Support for responsive views via media queries is kind of borked in IE10, for
// Surface/desktop in split view and for Windows Phone 8. This particular fix
// must be accompanied by a snippet of JavaScript to sniff the user agent and
// apply some conditional CSS to *only* the Surface/desktop Windows 8. Look at
// our Getting Started page for more information on this bug.
//
// For more information, see the following:
//
// Issue: https://github.com/twbs/bootstrap/issues/10497
// Docs: http://getbootstrap.com/getting-started/#browsers
// Source: http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/

@-ms-viewport {
  width: device-width;
}


/* Visibility utilities */

@include responsive-invisibility('.visible-xs');
@include breakpoint(max-width $screen-xs-max) {
  @include responsive-visibility('.visible-xs');
}

@include breakpoint($screen-sm-min $screen-sm-max) {
  @include responsive-visibility('.visible-xs.visible-sm');
}


@include breakpoint($screen-md-min $screen-md-max) {
  @include responsive-visibility('.visible-xs.visible-md');
}


@include breakpoint($screen-lg-min) {
  @include responsive-visibility('.visible-xs.visible-lg');
}


@include responsive-invisibility('.visible-sm');

@include breakpoint($screen-xs-max) {
  @include responsive-visibility('.visible-sm.visible-xs');
}

@include breakpoint($screen-sm-min $screen-sm-max) {
  @include responsive-visibility('.visible-sm');
}

@include breakpoint($screen-md-min $screen-md-max) {
  @include responsive-visibility('.visible-sm.visible-md');
}
@if($view-type == 'Desktop') {
    @include responsive-visibility('.visible-sm.visible-md');
}
@if($view-type == 'Responsive') {
    .no-mqs{
        @include responsive-visibility('.visible-sm.visible-md');
    }
}


@include breakpoint($screen-lg-min) {
  @include responsive-visibility('.visible-sm.visible-lg');
}


@include responsive-invisibility('.visible-md');

@include breakpoint(max-width $screen-xs-max) {
  @include responsive-visibility('.visible-md.visible-xs');
}


@include breakpoint($screen-sm-min $screen-sm-max) {
  @include responsive-visibility('.visible-md.visible-sm');
}

@include breakpoint($screen-md-min $screen-md-max) {
  @include responsive-visibility('.visible-md');
}
@if($view-type == 'Desktop') {
    @include responsive-visibility('.visible-md');
}
@if($view-type == 'Responsive') {
    .no-mqs{
        @include responsive-visibility('.visible-md');
    }
}

@include breakpoint($screen-lg-min) {
  @include responsive-visibility('.visible-md.visible-lg');
}


@include responsive-invisibility('.visible-lg');

@include breakpoint(max-width $screen-xs-max) {
  @include responsive-visibility('.visible-lg.visible-xs');
}


@include breakpoint($screen-sm-min $screen-sm-max) {
  @include responsive-visibility('.visible-lg.visible-sm');
}


@include breakpoint($screen-md-min $screen-md-max) {
  @include responsive-visibility('.visible-lg.visible-md');
}
@if($view-type == 'Desktop') {
    @include responsive-visibility('.visible-lg.visible-md');
}
@if($view-type == 'Responsive') {
    .no-mqs{
        @include responsive-visibility('.visible-lg.visible-md');
    }
}

@include breakpoint($screen-lg-min) {
  @include responsive-visibility('.visible-lg');
}

@include responsive-visibility('.hidden-xs');

@include breakpoint(max-width $screen-xs-max) {
  @include responsive-invisibility('.hidden-xs');
  .hidden-xs-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}

@include breakpoint($screen-sm-min $screen-sm-max) {
  @include responsive-invisibility('.hidden-xs.hidden-sm');
  .hidden-xs-wrapper.hidden-sm-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}


@include breakpoint($screen-md-min $screen-md-max) {
  @include responsive-invisibility('.hidden-xs.hidden-md');
  .hidden-xs-wrapper.hidden-md-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}
@if($view-type == 'Desktop') {
    @include responsive-invisibility('.hidden-xs.hidden-md');
  .hidden-xs-wrapper.hidden-md-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}
@if($view-type == 'Responsive') {
    .no-mqs{
        @include responsive-invisibility('.hidden-xs.hidden-md');
      .hidden-xs-wrapper.hidden-md-wrapper {
        &, & + .rtUL { display: none !important; }
      }
    }
}


@include breakpoint($screen-lg-min) {
  @include responsive-invisibility('.hidden-xs.hidden-lg');
  .hidden-xs-wrapper.hidden-lg-warpper {
      &, & + .rtUL { display: none !important; }
  }
}


@include responsive-visibility('.hidden-sm');

@include breakpoint(max-width $screen-xs-max) {
  @include responsive-invisibility('.hidden-sm.hidden-xs');
  .hidden-sm-wrapper.hidden-xs-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}

@include breakpoint($screen-sm-min $screen-sm-max) {
  @include responsive-invisibility('.hidden-sm');
  .hidden-sm-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}

@include breakpoint($screen-md-min $screen-md-max) {
  @include responsive-invisibility('.hidden-sm.hidden-md');
}
@if($view-type == 'Desktop') {
    @include responsive-invisibility('.hidden-sm.hidden-md');
  .hidden-sm-wrapper.hidden-md-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}
@if($view-type == 'Responsive') {
    .no-mqs{
        @include responsive-invisibility('.hidden-sm.hidden-md');
        .hidden-sm-wrapper.hidden-md-wrapper {
            &, & + .rtUL { display: none !important; }
        }
    }
}


@include breakpoint($screen-lg-min) {
  @include responsive-invisibility('.hidden-sm.hidden-lg');
  .hidden-lg-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}


@include responsive-visibility('.hidden-md');

@include breakpoint(max-width $screen-xs-max) {
  @include responsive-invisibility('.hidden-md.hidden-xs');
  .hidden-md-wrapper.hidden-xs-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}


@include breakpoint($screen-sm-min $screen-sm-max) {
  @include responsive-invisibility('.hidden-md.hidden-sm');
  .hidden-md-wrapper.hidden-sm-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}

@include breakpoint($screen-md-min $screen-md-max) {
  @include responsive-invisibility('.hidden-md');
  .hidden-md-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}
@if($view-type == 'Desktop') {
    @include responsive-invisibility('.hidden-md');
    .hidden-md-wrapper {
        &, & + .rtUL { display: none !important; }
    }
}
@if($view-type == 'Responsive') {
    .no-mqs{
        @include responsive-invisibility('.hidden-md');
        .hidden-md-wrapper {
            &, & + .rtUL { display: none !important; }
        }
    }
}

@include breakpoint($screen-lg-min) {
  @include responsive-invisibility('.hidden-md.hidden-lg');
  .hiddne-md-wrapper.hidden-lg-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}


@include responsive-visibility('.hidden-lg');

@include breakpoint(max-width $screen-xs-max) {
  @include responsive-invisibility('.hidden-lg.hidden-xs');
  .hidden-lg-wrapper.hidden-xs-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}


@include breakpoint($screen-sm-min $screen-sm-max) {
  @include responsive-invisibility('.hidden-lg.hidden-sm');
  .hidden-lg-wrapper.hidden-sm-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}


@include breakpoint($screen-md-min $screen-md-max) {
  @include responsive-invisibility('.hidden-lg.hidden-md');
  .hidden-lg-wrapper.hidden-md-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}
@if($view-type == 'Desktop') {
    @include responsive-invisibility('.hidden-lg.hidden-md');
    .hidden-lg-wrapper.hidden-md-wrapper {
        &, & + .rtUL { display: none !important; }
    }
}
@if($view-type == 'Responsive') {
    .no-mqs{
        @include responsive-invisibility('.hidden-lg.hidden-md');
        .hidden-lg-wrapper.hidden-md-wrapper {
            &, & + .rtUL { display: none !important; }
        }
    }
}

@include breakpoint($screen-lg-min) {
  @include responsive-invisibility('.hidden-lg');
  .hidden-lg-wrapper {
      &, & + .rtUL { display: none !important; }
  }
}

/* Print utilities */

@include responsive-invisibility('.visible-print');

@media print {

  @include responsive-visibility('.visible-print');


  @include responsive-invisibility('.hidden-print');

}
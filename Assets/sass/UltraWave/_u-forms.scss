/* ==========================================================================
   FORMS
   ========================================================================== */

/* Basics
   ========================================================================== */
   /* "Label" class can be used to style items like labels without needing to use the <label> tag.
   Be aware that you always need one <label> tag associated with all <input> controls. */
/* NOTE: The "PanelFieldLabelFont" class is obsolete */
label, 
.Label, 
.PanelFieldLabelFont {
    font-weight: bold;
    color: $label-color;
    /* This is to allow space for the required indicator */
    padding-left: 7px;
    margin-left: -7px;
}

/* set default input styles */
input,
textarea {
    font-family: inherit;
    font-weight: normal;
    font-size: 98%;
    padding-left: 0.25em;
    padding-right: 0.25em;
}

/* default input width */
input {
    width:12.25em;
}

/* reset widths for inputs where needed */
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
  width: auto;
}

/* default textarea width and padding */
textarea {
    max-width: 100%;
    width: 15em;
    /* Gives textarea the same padding as other input fields */
    padding: 0.25em; 
    
    @include respond-to('smartphones and up') {
        width: 22em;
    }
    #{$mq-fallback-class} & {
        max-width: none;
    }
}

/* put a gray background on disabled inputs */
input[disabled], 
select[disabled], 
textarea[disabled], 
input[readonly], 
select[readonly], 
textarea[readonly] {
    cursor: default;
    background-color: #eeeeee; 
}

/* override the gray background on particular types of inputs */
input[type="radio"][disabled], 
input[type="checkbox"][disabled], 
input[type="radio"][readonly],
input[type="checkbox"][readonly], 
input[type="image"][disabled] {
    background-color: transparent; 
}

/* "gray out" image buttons when they are disabled */
input[type="image"][disabled] {
    filter: alpha(opacity=50);
    opacity: 0.5; 
}

/* disabled span and labels */
span[disabled], 
label[disabled], 
[disabled] label, 
.Disabled, 
.aspNetDisabled,
.aspNetDisabled label,
.aspNetDisabled .Label {
    color: #999;
}

select[multiple="multiple"] {
    min-width: 11em;
}

/* Event Pricing fields */
.FunctionPricingTable input[type=text][name*=TextPrice] {
    width: 9em;
}

/* PanelField
   ========================================================================== */
/**
  * PanelField should be used to wrap all form fields in iMIS.
  * The correct syntax is automatically generated by asiweb controls when the property RenderPanelField is set to true.
  * Classes Top, Bottom, Left or Right are generated when the property CaptionPosition is defined, 
  * and describe where the label renders relative to the associated input.
  * If no caption position is set, the label will automatically render to the left.
  *
  * Example HTML:
  * <div class="PanelField Left">
  *     <label for="MyInput">This is a label</label>
  *     <div class="PanelFieldValue">
  *         <input type="text" ID="MyInput" />
  *     </div>
  * </div>
  *
  * Note: It is very important to assoicate a label with every form field.
  * This is automatically handled by asiweb controls when using the built-in caption rendering,
  * but will have to be set by hand when you opt not to use it.
  * In ASP.NET, setting the property AssociatedControlID on a Label control (or asiweb:StyledLabel)
  * will render the control as a label associated with the provided control ID.
  */

/* .PanelField <div> Wrapper for the label and value of a field in a form */
.PanelField {
    float: left;
    clear: left;
    width: 100%;
    padding-top: 0.4em;
    padding-bottom: 0.4em;
}
.PanelField label, 
.PanelField .Label,
.PanelField .PanelFieldValue {
    float: left;
}

/* Label within a Panel Field */
.PanelField label, 
.PanelField .Label {
    text-align: left;
    width: 11.5em;
    word-wrap: break-word;
    white-space: pre-line;
    padding-right: .5em;
}

.PanelFieldValue {
    display: inline;
    width: auto;
    padding-right: .5em;
}

.PanelFieldValue,
.PanelFieldLabel {
    &, .Left &, .Right & {
        /* When the label is on the left (default) or right */
        /* NOTE: The PanelFieldLabel class is obsolete */
        display:inline-block;
        float:left;
    }

    .Top &, .Bottom & {
        /* When the label is on the top or bottom */
        /* NOTE: The PanelFieldLabel class is obsolete */
        display:block;
        clear:left;
        float: none;
    }
}

.Top label, .Bottom label, .Right label,
.Top .Label, .Bottom .Label, .Right .Label {
    width:auto!important;
    padding-right: 0;
}

/* Class LabelSpacer can be used as a wrapper to create a label-sized indention 
to appropriately align fields in a form */
.LabelSpacer, 
.LabelSpacer.PanelField {
    padding-left: 11em;
    min-height: 1px;
}

/* Sizes of the HTML Editors and Textareas */
.PanelField .HtmlEditor {
    width: 100%!Important;
}

/* Give radio buttons and checkboxes some room to breathe */
input[type="radio"] + label,
input[type="checkbox"] + label {
    padding-left: 10px;
    padding-right: 1em;
}

/* allow radio buttons to display to the left of their labels */
.PanelFieldValue input[type="radio"] {
    float:left;
}

/* Override styling for PanelFields within grid headers */
.rgHeader .PanelField, 
.PanelFieldReset.PanelField, .PanelFieldReset .PanelField {
    float: none;
    clear: none;
    width: auto;
    padding: 0;
    display: inline;
}

/* Used to make bottom borders line up in tables */
.StandardPanel td {
    vertical-align: top;
}
.StandardPanel td .PanelField {
    border-bottom: 0;
}

/* PanelBlock
   ========================================================================== */
/* Wrapper class "PanelBlock" may be used to make PanelFields display like tables. */
/* Use once around all the PanelFields that you wish to display in table format. */
.PanelBlock {
    display:table;
}

/* Second set of selectors necessary to override original PanelField styling */
.PanelBlock .PanelField {
    display:table-row;
    float:none;
    width:100%;

    .PanelFieldLabel,
    .PanelFieldValue {
        display:table-cell;
        float:none;
        padding-right:3px;
        vertical-align:top;
        padding-top: 0.4em;
        padding-bottom: 0.4em;
    }

    label,
    .Label {
        width:auto;
    }

    &.Top, &.Bottom {
        .PanelFieldLabel, 
        .PanelFieldValue {
            display:block;
        }
    }
}

.PanelBlock.MiddleAlign {
    .PanelFieldLabel, 
    .PanelFieldValue {
        vertical-align: middle;
    }
}

/* Form guides
   ========================================================================== */
/* Indicators and helpers to guide a user through a form */
/* The required class should be applied to the label of a required field.
 * It displays the red asterisk next to the label */
.Required {
    background-position: left .45em !important;
    background-image: url(../images/required.png) !important;
    background-repeat: no-repeat;
    display: inline;
}
/* special case where a required label is displayed to the right of a field */
.Right .Required {
    padding-left: 9px !important;
    margin-left: 0 !important;
}

/* The important class should be applied to validation messages (eg. Required)
 * that appear next to fields that fail validation on submit */
.Important, .ValidationError {
    font-weight: normal;
    color: #FF0000;
    padding-left: 3px !important;
    vertical-align:middle;
}

/* Helper text to describe the purpose of a field */
.Info {
    font-style: italic;
    font-weight: normal;
    color: #444;
}

/* .moreInfo <div> used by the info control to display a help pop-up */
.moreInfo {
    display:inline;
    vertical-align:middle;
}

.moreInfoPanel {
    display: block;
    max-width: 25em;
}

.unitText {
    margin-left: 2px;
    white-space: nowrap;
}

/* Form style modifiers
   ========================================================================== */

/* Wrap several PanelFields in form-inline to make them display inline */
.form-inline .PanelField {
    @include panel-field-reset();
    display: inline-block;
}

%inputsHideClear {
    &.AlignRight::-ms-clear {
        /* if inputs are aligned right in IE10 the clear button hides the input value 
         * so we just don't display it
         */
        display: none;
    }
}

/* Use the following classes to size inputs (such as text fields) 
 * They are especially useful for small or large inputs such as quantity or long file paths
 */
.InputXXSmall, .InputXXSmallWrapper input[type='text'],
.NarrowTextBox { /* NOTE: Narrow text box is obsolete. Use InputXXSmall instead */
    width: 3em;
    @extend %inputsHideClear;
}
.InputXSmall, .InputXSmallWrapper input[type='text'] {
    width: 4.3em;
    @extend %inputsHideClear;
}
.InputSmall, .InputSmallWrapper input[type='text'] {
    width: 7em;
}
.InputMedium, .InputMediumWrapper input[type='text'] {
    width: 11.9em;
}
.InputLarge,.InputLargeWrapper input[type='text'] {
    width: 18em;
}
.InputXLarge, .InputXLargeWrapper input[type='text'],
.WideTextBox { /* NOTE: WideTextBox is obsolete. Use InputXLarge instead. */

    width: 26.5em;
}
.InputXXLarge, .InputXXLargeWrapper input[type='text'] {
    width: 42em;
}

/* Apply the AutoWidth class to allow form fields to take up on the necessary amount of space */
.AutoWidth label, .AutoWidth .Label, .AutoWidth .PanelFieldValue, .AutoWidth {
    width: auto !important;
    min-width: 1em !important;
}

/* For AutoWidth labels, this adds padding to the right so there is more space between the label and value */
label.AutoWidth, .Label.AutoWidth {
    padding-right: .6em;
}

/* Apply the FloatNone class to allow form fields to render without floats
 * It is particulary useful for checkbox and radio button controls */
.FloatNone label, .FloatNone input {
    float: none !important;
}

.radio-inline-sm {
    @include respond-to('tablets and down') {
        display: block;
        @include clearfix();

        input {
            /* Apply the radio-inline-sm class to display horizontal radio button lists vertically on small displays, like mobile phones */
            float: left !important;
        }

        label {
            float: left !important;
        }

        label + input {
            clear: both !important;
        }
    }
}

/* CheckBoxList: Wrapper class for a list of related checkboxes */
.CheckBoxList {
    margin-top: .4em;

    .PanelField {
        padding-top: 0;
    }
    label {            
        float: none !important;
        font-weight: normal !important;
        color: $text-color !important;
    }
    input {
        float: none !important;
    }
}

/* Use TotalBox as a wrapper for a PanelField to give it a visual distinction.
 * It is intended to be used to call out the total combined price. */
.TotalBox .PanelField, .PanelField.TotalBox {
    width:auto;
    border:1px solid #90979E;
}
.TotalBox .PanelField .PanelFieldValue, .PanelField.TotalBox .PanelFieldValue {
    font-size:120%;
    font-weight:bold;
    padding:.4em;
    float:right;
}

/* Applies a consistent width and padding to System Configuration text fields and textareas */
.SystemConfigTextField textarea,
.SystemConfigTextField input[type="text"] {
    width: 55%;
    padding: 0.25em;
}


/* Form field groupings
   ========================================================================== */
/* These classes can be used to visually associate sections of a form */
/* Used as a wrapper for items that are a subset of another item
 * eg. options that are only enabled if the checkbox above them is checked */
.SubItems {
    padding-left:2.2em;
    padding-top: .5em;
}

.ShowLegend legend + .SubItems {
    padding-top: 0;
    /* don't want too much padding between the legend and the Sub Items*/
}

/* Used for configuration group titles */
.ConfigurationGroup {
    text-decoration:underline;
}

/* Fieldsets are hidden by default, but if you use the class ShowFieldset 
 * either on the fieldset or as a wrapper it will display. 
 * ShowLegend can be used to display the legend without the border.
*/
div.ShowFieldset fieldset legend, 
fieldset.ShowFieldset legend,
.ShowLegend legend {
    display: block !important;
    color: $label-color;
    font-weight: bold;
}
div.ShowFieldset fieldset, 
fieldset.ShowFieldset {
    border: 1px solid gray;
    padding: 1em;
    margin: .05em;	
    
    legend { padding: 5px; }
}

/* Questions
   ========================================================================== */
/* These selectors affect form questions and responses displayed for events and program items   */
.FormFieldResponse .PanelFieldValue {
    padding-top: .5em;
    padding-bottom: .5em;
}

.FormFieldResponse .PanelFieldLabel {
    display: block;
    float: none;
}

.PanelField.FormFieldResponse label, 
.PanelField.FormFieldResponse .Label {
    float: none;
}

.FormFieldResponse input {
    text-align: left !important;
}

/* Buttons
   ========================================================================== */
/* IE7 and 8 - position text on the Upload button*/	
.TextButton {
    vertical-align: middle;
}

/* Buttons that display at the bottom of the page (eg. Save & Close, Save, Cancel buttons) */
.CommandBar {
    padding-top: 5px;
    z-index: 2;
    text-align: right;   
}
.CommandBar input, 
.CommandBar button {
    margin-left: 5px;
}
.ButtonPanel {
    width: 100%;
}

/* ButtonBoxList
   ========================================================================== */
/* ButtonBoxList - used to display big buttons on the dashboards */
div.ButtonBox {
    width: 100%;
    text-align: center;   
}

ul.ButtonBoxList {   
    padding: 10px;
    list-style: none;
    overflow: hidden;
    margin: 0px 0px -30px 0px;
}

ul.ButtonBoxList li {
    display: inline-block;
    margin-right: 15px;
    overflow: hidden;
    padding: 0 0 15px 0;
    position: relative;
}

ul.ButtonBoxList li a {
    background: #fff;
    border: 1px solid #ddd;
    color: #333;
    display: block;
    height: 125px;
    overflow: hidden;
    padding: 10px 10px;
    position: relative;
    text-align: center;
    text-decoration: none;
}

ul.ButtonBoxList li a:hover {
    border:1px solid #c8c8c8;
}

ul.ButtonBoxList li a p {
    line-height: 20px;
    padding-bottom: 20px;
}

.Span1 {
    width: 40px;
}
.Span2 {
    width: 80px;
}
.Span3 {
    width: 160px;
}
.Span4 {
    width: 200px;
}

